AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  API POST HTTP request Lambda Function template.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Layers:
      - !Ref BookValidationLayer
    Runtime: java11
    Architectures:
      - x86_64
    MemorySize: 512
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
        ENVIRONMENT: PROD
Resources:
  CreateBookFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      VpcConfig:
        SecurityGroupIds:
          - sg-0e3f43d4cb8d16e9c
        SubnetIds:
          - subnet-0e9463096d7ddb9d3 #private1-euc-1a
      CodeUri: CreateBookFunction
      Handler: com.mishenev.post_book.App::handleRequest
      Events:
        Book:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /book
            Method: post
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn:
              arn:aws:secretsmanager:eu-central-1:679305952734:secret:dev_library_postgres_creds-vAa5dM
  BookValidationLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: book-validation-layer
      Description: Lambda Layer for validation
      ContentUri: BookValidationLayer/
      CompatibleRuntimes:
        - java11
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: java11
  DtoLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: dto-layer
      Description: Lambda Layer for validation
      ContentUri: Dto/
      CompatibleRuntimes:
        - java11
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: java11
  BooksByNameCounterFunction:
    Type: AWS::Serverless::Function
    Properties:
      VpcConfig:
        SecurityGroupIds:
          - sg-0e3f43d4cb8d16e9c
        SubnetIds:
          - subnet-0e9463096d7ddb9d3 #private1-euc-1a
      CodeUri: BooksByNameCounterFunction
      Handler: com.mishenev.count_book.App::handleRequest
      Events:
        Book:
          Type: Api
          Properties:
            Path: /book/count
            Method: get
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn:
              arn:aws:secretsmanager:eu-central-1:679305952734:secret:dev_library_postgres_creds-vAa5dM
  CreateAuthorFunction:
    Type: AWS::Serverless::Function
    Properties:
      VpcConfig:
        SecurityGroupIds:
          - sg-0e3f43d4cb8d16e9c
        SubnetIds:
          - subnet-06e4915d73f2b73da # private2-euc-1b
      CodeUri: CreateAuthorFunction
      Handler: com.mishenev.create_author.App::handleRequest
      Events:
        CreateAuthorEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt NewAuthorQueue.Arn
            BatchSize: 100 # trigger Lambda with 100 CreateAuthorEvent messages per batch
            MaximumBatchingWindowInSeconds: 60 # how many seconds SQS will wait to collect messages batch before invoking Lambda
            # Queue visibility timeout = 6 * function timeout (20s) + BatchWindow (60s) = 3 min
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn:
              arn:aws:secretsmanager:eu-central-1:679305952734:secret:dev_library_postgres_creds-vAa5dM
  NewAuthorQueue:
    Type: AWS::SQS::Queue

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateBookApi:
    Description: "API Gateway endpoint URL for Prod stage for Create Book function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/book/"
  CreateBookFunction:
    Description: "Create Book Lambda Function ARN"
    Value: !GetAtt CreateBookFunction.Arn
  CreateBookFunctionIamRole:
    Description: "Implicit IAM Role created for Create Book function"
    Value: !GetAtt CreateBookFunctionRole.Arn
  BooksByNameCounterFunction:
    Description: "Create Book Lambda Function ARN"
    Value: !GetAtt BooksByNameCounterFunction.Arn
  BooksByNameCounterFunctionIamRole:
    Description: "Implicit IAM Role created for Books by Name Counter function"
    Value: !GetAtt BooksByNameCounterFunction.Arn
